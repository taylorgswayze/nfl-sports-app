# Generated by Django 5.1.1 on 2024-10-20 02:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('event_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('short_name', models.CharField(max_length=100, null=True)),
                ('game_datetime', models.DateTimeField()),
                ('season', models.IntegerField()),
                ('week_num', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('event_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='nfl.game')),
                ('spread_display', models.CharField(max_length=30, null=True)),
                ('spread', models.IntegerField(null=True)),
                ('home_win_prob', models.FloatField(null=True)),
                ('away_win_prob', models.FloatField(null=True)),
                ('pred_diff', models.FloatField(null=True)),
                ('last_updated', models.DateTimeField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_games', to='nfl.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_games', to='nfl.team'),
        ),
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('athlete_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('jersey', models.IntegerField(null=True)),
                ('position_id', models.IntegerField(null=True)),
                ('position', models.CharField(max_length=50, null=True)),
                ('age', models.IntegerField(null=True)),
                ('weight', models.IntegerField(null=True)),
                ('height', models.IntegerField(null=True)),
                ('debut_year', models.IntegerField(null=True)),
                ('active', models.CharField(max_length=50, null=True)),
                ('status_id', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('injuries', models.CharField(max_length=50, null=True)),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nfl.team')),
            ],
        ),
        migrations.CreateModel(
            name='StatTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, null=True)),
                ('stat_name', models.CharField(max_length=50, null=True)),
                ('value', models.FloatField(null=True)),
                ('rank', models.IntegerField(null=True)),
                ('display_rank', models.CharField(max_length=10, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nfl.team')),
            ],
            options={
                'unique_together': {('team_id', 'category', 'stat_name')},
            },
        ),
    ]
